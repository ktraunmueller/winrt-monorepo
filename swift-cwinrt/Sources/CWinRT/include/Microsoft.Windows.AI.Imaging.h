// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.Graphics.Imaging.h"
#include "Microsoft.Windows.AI.h"
#include "Microsoft.Windows.AI.ContentSafety.h"
#include "Windows.Graphics.h"
#include "Windows.Graphics.Imaging.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGeneratorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGeneratorVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGeneratorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGeneratorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGeneratorVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGeneratorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractorVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractorVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScalerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScalerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScalerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScalerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScalerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScalerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedTextVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedTextVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedTextVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedTextVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CIAIFeatureReadyResult_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CIAIFeatureReadyResult_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CIAIFeatureReadyResult __x_ABI_CMicrosoft_CWindows_CAI_CIAIFeatureReadyResult;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CIAIFeatureReadyResult_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CIAIFeatureReadyResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double* asyncInfo,
        DOUBLE progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING* asyncInfo,
        HSTRING progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CGraphics_CPointInt32 __x_ABI_CWindows_CGraphics_CPointInt32;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32 __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32 __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPointInt32** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CGraphics_CRectInt32 __x_ABI_CWindows_CGraphics_CRectInt32;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32 __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32 __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CRectInt32** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32 __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32 __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32 __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32 __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer;

#endif // ____x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CWindows_CAI_CAIFeatureReadyState __x_ABI_CMicrosoft_CWindows_CAI_CAIFeatureReadyState;

#ifndef ____x_ABI_CMicrosoft_CWindows_CAI_CContentSafety_CIContentFilterOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CAI_CContentSafety_CIContentFilterOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CAI_CContentSafety_CIContentFilterOptions __x_ABI_CMicrosoft_CWindows_CAI_CContentSafety_CIContentFilterOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CAI_CContentSafety_CIContentFilterOptions_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind;

typedef enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus;

typedef enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedLineStyle __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedLineStyle;

typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedTextBoundingBox __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedTextBoundingBox;

enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind
    {
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind_BriefDescription = 0,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind_DetailedDescription = 1,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind_DiagramDescription = 2,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind_AccessibleDescription = 3,
};

enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus
    {
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_Complete = 0,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_InProgress = 1,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_BlockedByPolicy = 2,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_ImageBlockedByContentModeration = 3,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_TextInImageBlockedByContentModeration = 4,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_DescriptionTextBlockedByContentModeration = 5,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_ImageHasTooMuchText = 6,
    __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus_InternalError = 7,
};

enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedLineStyle
    {
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedLineStyle_Handwritten = 0,
};

struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedTextBoundingBox
    {
        struct __x_ABI_CWindows_CFoundation_CPoint BottomLeft;
    struct __x_ABI_CWindows_CFoundation_CPoint BottomRight;
    struct __x_ABI_CWindows_CFoundation_CPoint TopLeft;
    struct __x_ABI_CWindows_CFoundation_CPoint TopRight;
};

#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DescribeAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator* This,
        __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer* image,
        enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionKind kind,
        __x_ABI_CMicrosoft_CWindows_CAI_CContentSafety_CIContentFilterOptions* contentFilterOptions,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionResult_HSTRING** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGenerator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetReadyState)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This,
        enum __x_ABI_CMicrosoft_CWindows_CAI_CAIFeatureReadyState* result);
    HRESULT (STDMETHODCALLTYPE* EnsureReadyAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double** operation);
    HRESULT (STDMETHODCALLTYPE* CreateAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageDescriptionGenerator** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionGeneratorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult* This,
        enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CImageDescriptionResultStatus* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResultVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageDescriptionResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSoftwareBitmapObjectMask)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* hint,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap** result);
    HRESULT (STDMETHODCALLTYPE* GetImageBufferObjectMask)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor* This,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* hint,
        __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IncludeRects)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CRectInt32** value);
    HRESULT (STDMETHODCALLTYPE* get_IncludePoints)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32** value);
    HRESULT (STDMETHODCALLTYPE* get_ExcludePoints)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPointInt32** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CRectInt32* includeRects,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* includePoints,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPointInt32* excludePoints,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHint** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactoryVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorHintFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithSoftwareBitmapAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap* softwareBitmap,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor** operation);
    HRESULT (STDMETHODCALLTYPE* CreateWithImageBufferAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer* imageBuffer,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageObjectExtractor** operation);
    HRESULT (STDMETHODCALLTYPE* GetReadyState)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
        enum __x_ABI_CMicrosoft_CWindows_CAI_CAIFeatureReadyState* result);
    HRESULT (STDMETHODCALLTYPE* EnsureReadyAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageObjectExtractorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ScaleSoftwareBitmap)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap* softwareBitmap,
        INT32 width,
        INT32 height,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap** result);
    HRESULT (STDMETHODCALLTYPE* ScaleImageBuffer)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This,
        __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer* imageBuffer,
        INT32 width,
        INT32 height,
        __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer** result);
    HRESULT (STDMETHODCALLTYPE* get_MaxSupportedScaleFactor)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScaler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetReadyState)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This,
        enum __x_ABI_CMicrosoft_CWindows_CAI_CAIFeatureReadyState* result);
    HRESULT (STDMETHODCALLTYPE* EnsureReadyAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double** operation);
    HRESULT (STDMETHODCALLTYPE* CreateAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CImageScaler** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIImageScalerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BoundingBox)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
        struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedTextBoundingBox* value);
    HRESULT (STDMETHODCALLTYPE* get_Words)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
        UINT32* valueLength,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord*** value);
    HRESULT (STDMETHODCALLTYPE* get_Style)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
        enum __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedLineStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_LineStyleConfidence)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLineVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLineVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Lines)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This,
        UINT32* valueLength,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedLine*** value);
    HRESULT (STDMETHODCALLTYPE* get_TextAngle)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedTextVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedTextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWordVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BoundingBox)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This,
        struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CRecognizedTextBoundingBox* value);
    HRESULT (STDMETHODCALLTYPE* get_MatchConfidence)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWordVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWordVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedWord_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RecognizeTextFromImageAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This,
        __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer* imageBuffer,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CRecognizedText** operation);
    HRESULT (STDMETHODCALLTYPE* RecognizeTextFromImage)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer* This,
        __x_ABI_CMicrosoft_CGraphics_CImaging_CIImageBuffer* imageBuffer,
        __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CIRecognizedText** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetReadyState)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This,
        enum __x_ABI_CMicrosoft_CWindows_CAI_CAIFeatureReadyState* result);
    HRESULT (STDMETHODCALLTYPE* EnsureReadyAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CAI__CAIFeatureReadyResult_double** operation);
    HRESULT (STDMETHODCALLTYPE* CreateAsync)(__x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWindows__CAI__CImaging__CTextRecognizer** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CAI_CImaging_CITextRecognizerStatics_INTERFACE_DEFINED__) */
    
