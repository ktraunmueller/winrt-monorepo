// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionCompletedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x1F34EBB6, Data2: 0xB79F, Data3: 0x4121, Data4: ( 0xA5,0xE7,0xFD,0xA9,0xB8,0x61,0x6E,0x30 ))// 1F34EBB6-B79F-4121-A5E7-FDA9B8616E30
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionSegment: WindowsFoundation.IID {
    .init(Data1: 0x776C6BD9, Data2: 0x4EAD, Data3: 0x4DA7, Data4: ( 0x8F,0x47,0x3A,0x88,0xB5,0x23,0xCC,0x34 ))// 776C6BD9-4EAD-4DA7-8F47-3A88B523CC34
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionStartedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x276B16A9, Data2: 0x64E7, Data3: 0x4AB0, Data4: ( 0xBC,0x4B,0xA0,0x2D,0x73,0x83,0x5B,0xFB ))// 276B16A9-64E7-4AB0-BC4B-A02D73835BFB
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext: WindowsFoundation.IID {
    .init(Data1: 0xBF6608AF, Data2: 0x4041, Data3: 0x47C3, Data4: ( 0xB2,0x63,0xA9,0x18,0xEB,0x5E,0xAE,0xF2 ))// BF6608AF-4041-47C3-B263-A918EB5EAEF2
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext2: WindowsFoundation.IID {
    .init(Data1: 0xB1867DBB, Data2: 0x083B, Data3: 0x49E1, Data4: ( 0xB2,0x81,0x2B,0x35,0xD6,0x2B,0xF4,0x66 ))// B1867DBB-083B-49E1-B281-2B35D62BF466
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x7310BD33, Data2: 0xB4A8, Data3: 0x43B1, Data4: ( 0xB3,0x7B,0x07,0x24,0xD4,0xAC,0xA7,0xAB ))// 7310BD33-B4A8-43B1-B37B-0724D4ACA7AB
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutBounds: WindowsFoundation.IID {
    .init(Data1: 0xE972C974, Data2: 0x4436, Data3: 0x4917, Data4: ( 0x80,0xD0,0xA5,0x25,0xE4,0xCA,0x67,0x80 ))// E972C974-4436-4917-80D0-A525E4CA6780
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest: WindowsFoundation.IID {
    .init(Data1: 0x2555A8CC, Data2: 0x51FD, Data3: 0x4F03, Data4: ( 0x98,0xBF,0xAC,0x78,0x17,0x4D,0x68,0xE0 ))// 2555A8CC-51FD-4F03-98BF-AC78174D68E0
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest2: WindowsFoundation.IID {
    .init(Data1: 0x676DE624, Data2: 0xCD3D, Data3: 0x4BCD, Data4: ( 0xBF,0x01,0x7F,0x71,0x10,0x95,0x45,0x11 ))// 676DE624-CD3D-4BCD-BF01-7F7110954511
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xB1DC6AE0, Data2: 0x9A7B, Data3: 0x4E9E, Data4: ( 0xA5,0x66,0x4A,0x6B,0x5F,0x8A,0xD6,0x76 ))// B1DC6AE0-9A7B-4E9E-A566-4A6B5F8AD676
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequest: WindowsFoundation.IID {
    .init(Data1: 0xF0A70403, Data2: 0x208B, Data3: 0x4301, Data4: ( 0x88,0x3C,0x74,0xCA,0x74,0x85,0xFD,0x8D ))// F0A70403-208B-4301-883C-74CA7485FD8D
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x13C6682B, Data2: 0xF614, Data3: 0x421A, Data4: ( 0x8F,0x4B,0x9E,0xC8,0xA5,0xA3,0x7F,0xCD ))// 13C6682B-F614-421A-8F4B-9EC8A5A37FCD
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionUpdatingEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xD445839F, Data2: 0xFE7F, Data3: 0x4BD5, Data4: ( 0x8A,0x26,0x09,0x22,0xC1,0xB3,0xE6,0x39 ))// D445839F-FE7F-4BD5-8A26-0922C1B3E639
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManager: WindowsFoundation.IID {
    .init(Data1: 0xC2507D83, Data2: 0x6E0A, Data3: 0x4A8A, Data4: ( 0xBD,0xF8,0x19,0x48,0x87,0x48,0x54,0xBA ))// C2507D83-6E0A-4A8A-BDF8-1948874854BA
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManagerStatics: WindowsFoundation.IID {
    .init(Data1: 0x1520A388, Data2: 0xE2CF, Data3: 0x4D65, Data4: ( 0xAE,0xB9,0xB3,0x2D,0x86,0xFE,0x39,0xB9 ))// 1520A388-E2CF-4D65-AEB9-B32D86FE39B9
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesStatics: WindowsFoundation.IID {
    .init(Data1: 0x91859A46, Data2: 0xECCF, Data3: 0x47A4, Data4: ( 0x8A,0xE7,0x09,0x8A,0x9C,0x6F,0xBB,0x15 ))// 91859A46-ECCF-47A4-8AE7-098A9C6FBB15
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequest: WindowsFoundation.IID {
    .init(Data1: 0x50D950A9, Data2: 0xF51E, Data3: 0x4CC1, Data4: ( 0x8C,0xA1,0xE6,0x34,0x6D,0x1A,0x61,0xBE ))// 50D950A9-F51E-4CC1-8CA1-E6346D1A61BE
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xF096A2D0, Data2: 0x41C6, Data3: 0x4C02, Data4: ( 0x8B,0x1A,0xD9,0x53,0xB0,0x0C,0xAB,0xB3 ))// F096A2D0-41C6-4C02-8B1A-D953B00CABB3
}

private var IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xEEA7918D, Data2: 0xCC2B, Data3: 0x4F03, Data4: ( 0x8F,0xF6,0x02,0xFD,0x21,0x7D,0xB4,0x50 ))// EEA7918D-CC2B-4F03-8FF6-02FD217DB450
}

@_spi(WinRTInternal)
public enum __ABI_Windows_UI_Text_Core {
    public class ICoreTextCompositionCompletedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionCompletedEventArgs }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionCompletedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_CompositionSegments() throws -> WindowsFoundation.AnyIVectorView<UWP.CoreTextCompositionSegment?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionCompletedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_CompositionSegments(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CText__CCore__CCoreTextCompositionSegmentWrapper.unwrapFrom(abi: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionCompletedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

    public class ICoreTextCompositionSegment: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionSegment }

        public func get_PreconversionString() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionSegment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PreconversionString(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Range() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionSegment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Range(pThis, &value))
            }
            return .from(abi: value)
        }

    }

    public class ICoreTextCompositionStartedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionStartedEventArgs }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionStartedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextCompositionStartedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

    public class ICoreTextEditContext: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext }

        public func get_Name() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Name(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Name(pThis, _value.get()))
            }
        }

        public func get_InputScope() throws -> UWP.CoreTextInputScope {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextInputScope = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_InputScope(pThis, &value))
            }
            return value
        }

        public func put_InputScope(_ value: UWP.CoreTextInputScope) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_InputScope(pThis, value))
            }
        }

        public func get_IsReadOnly() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsReadOnly(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_IsReadOnly(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsReadOnly(pThis, .init(from: value)))
            }
        }

        public func get_InputPaneDisplayPolicy() throws -> UWP.CoreTextInputPaneDisplayPolicy {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextInputPaneDisplayPolicy = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_InputPaneDisplayPolicy(pThis, &value))
            }
            return value
        }

        public func put_InputPaneDisplayPolicy(_ value: UWP.CoreTextInputPaneDisplayPolicy) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_InputPaneDisplayPolicy(pThis, value))
            }
        }

        public func add_TextRequested(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextTextRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextTextRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_TextRequested(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_TextRequested(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_TextRequested(pThis, cookie))
            }
        }

        public func add_SelectionRequested(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextSelectionRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextSelectionRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_SelectionRequested(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_SelectionRequested(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_SelectionRequested(pThis, cookie))
            }
        }

        public func add_LayoutRequested(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextLayoutRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextLayoutRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_LayoutRequested(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_LayoutRequested(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_LayoutRequested(pThis, cookie))
            }
        }

        public func add_TextUpdating(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextTextUpdatingEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextTextUpdatingEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_TextUpdating(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_TextUpdating(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_TextUpdating(pThis, cookie))
            }
        }

        public func add_SelectionUpdating(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextSelectionUpdatingEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextSelectionUpdatingEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_SelectionUpdating(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_SelectionUpdating(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_SelectionUpdating(pThis, cookie))
            }
        }

        public func add_FormatUpdating(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextFormatUpdatingEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextFormatUpdatingEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_FormatUpdating(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_FormatUpdating(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FormatUpdating(pThis, cookie))
            }
        }

        public func add_CompositionStarted(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextCompositionStartedEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextCompositionStartedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_CompositionStarted(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_CompositionStarted(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_CompositionStarted(pThis, cookie))
            }
        }

        public func add_CompositionCompleted(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, UWP.CoreTextCompositionCompletedEventArgs?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext___x_ABI_CWindows__CUI__CText__CCore__CCoreTextCompositionCompletedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_CompositionCompleted(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_CompositionCompleted(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_CompositionCompleted(pThis, cookie))
            }
        }

        public func add_FocusRemoved(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, Any?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext_IInspectableWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_FocusRemoved(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_FocusRemoved(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FocusRemoved(pThis, cookie))
            }
        }

        public func NotifyFocusEnter() throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.NotifyFocusEnter(pThis))
            }
        }

        public func NotifyFocusLeave() throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.NotifyFocusLeave(pThis))
            }
        }

        public func NotifyTextChanged(_ modifiedRange: UWP.CoreTextRange, _ newLength: Int32, _ newSelection: UWP.CoreTextRange) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.NotifyTextChanged(pThis, .from(swift: modifiedRange), newLength, .from(swift: newSelection)))
            }
        }

        public func NotifySelectionChanged(_ selection: UWP.CoreTextRange) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.NotifySelectionChanged(pThis, .from(swift: selection)))
            }
        }

        public func NotifyLayoutChanged() throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.NotifyLayoutChanged(pThis))
            }
        }

    }

    public class ICoreTextEditContext2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext2 }

        public func add_NotifyFocusLeaveCompleted(_ handler: TypedEventHandler<UWP.CoreTextEditContext?, Any?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextEditContext_IInspectableWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_NotifyFocusLeaveCompleted(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_NotifyFocusLeaveCompleted(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextEditContext2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_NotifyFocusLeaveCompleted(pThis, cookie))
            }
        }

    }

    public class ICoreTextFormatUpdatingEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs }

        public func get_Range() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Range(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_TextColor() throws -> UWP.UIElementType? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TextColor(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CViewManagement__CUIElementTypeWrapper.unwrapFrom(abi: value)
        }

        public func get_BackgroundColor() throws -> UWP.UIElementType? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_BackgroundColor(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CViewManagement__CUIElementTypeWrapper.unwrapFrom(abi: value)
        }

        public func get_UnderlineColor() throws -> UWP.UIElementType? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_UnderlineColor(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CViewManagement__CUIElementTypeWrapper.unwrapFrom(abi: value)
        }

        public func get_UnderlineType() throws -> UWP.UnderlineType? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_UnderlineType(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CText__CUnderlineTypeWrapper.unwrapFrom(abi: value)
        }

        public func get_Reason() throws -> UWP.CoreTextFormatUpdatingReason {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextFormatUpdatingReason = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Reason(pThis, &value))
            }
            return value
        }

        public func get_Result() throws -> UWP.CoreTextFormatUpdatingResult {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextFormatUpdatingResult = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Result(pThis, &value))
            }
            return value
        }

        public func put_Result(_ value: UWP.CoreTextFormatUpdatingResult) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Result(pThis, value))
            }
        }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextFormatUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

    public class ICoreTextLayoutBounds: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutBounds }

        public func get_TextBounds() throws -> WindowsFoundation.Rect {
            var value: __x_ABI_CWindows_CFoundation_CRect = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutBounds.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TextBounds(pThis, &value))
            }
            return .from(abi: value)
        }

        public func put_TextBounds(_ value: WindowsFoundation.Rect) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutBounds.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TextBounds(pThis, .from(swift: value)))
            }
        }

        public func get_ControlBounds() throws -> WindowsFoundation.Rect {
            var value: __x_ABI_CWindows_CFoundation_CRect = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutBounds.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ControlBounds(pThis, &value))
            }
            return .from(abi: value)
        }

        public func put_ControlBounds(_ value: WindowsFoundation.Rect) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutBounds.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ControlBounds(pThis, .from(swift: value)))
            }
        }

    }

    public class ICoreTextLayoutRequest: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest }

        public func get_Range() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Range(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LayoutBounds() throws -> UWP.CoreTextLayoutBounds? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_LayoutBounds(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_UI_Text_Core.CoreTextLayoutBoundsBridge.from(abi: value)
        }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

    public class ICoreTextLayoutRequest2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest2 }

        public func get_LayoutBoundsVisualPixels() throws -> UWP.CoreTextLayoutBounds? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequest2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_LayoutBoundsVisualPixels(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_UI_Text_Core.CoreTextLayoutBoundsBridge.from(abi: value)
        }

    }

    public class ICoreTextLayoutRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequestedEventArgs }

        public func get_Request() throws -> UWP.CoreTextLayoutRequest? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextLayoutRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Request(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_UI_Text_Core.CoreTextLayoutRequestBridge.from(abi: value)
        }

    }

    public class ICoreTextSelectionRequest: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequest }

        public func get_Selection() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Selection(pThis, &value))
            }
            return .from(abi: value)
        }

        public func put_Selection(_ value: UWP.CoreTextRange) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Selection(pThis, .from(swift: value)))
            }
        }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequest.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

    public class ICoreTextSelectionRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequestedEventArgs }

        public func get_Request() throws -> UWP.CoreTextSelectionRequest? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Request(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_UI_Text_Core.CoreTextSelectionRequestBridge.from(abi: value)
        }

    }

    public class ICoreTextSelectionUpdatingEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionUpdatingEventArgs }

        public func get_Selection() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Selection(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Result() throws -> UWP.CoreTextSelectionUpdatingResult {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextSelectionUpdatingResult = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Result(pThis, &value))
            }
            return value
        }

        public func put_Result(_ value: UWP.CoreTextSelectionUpdatingResult) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Result(pThis, value))
            }
        }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextSelectionUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

    public class ICoreTextServicesManager: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManager }

        public func get_InputLanguage() throws -> UWP.Language? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManager.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_InputLanguage(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Globalization.LanguageBridge.from(abi: value)
        }

        public func add_InputLanguageChanged(_ handler: TypedEventHandler<UWP.CoreTextServicesManager?, Any?>?) throws -> EventRegistrationToken {
            var cookie: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CText__CCore__CCoreTextServicesManager_IInspectableWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManager.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_InputLanguageChanged(pThis, _handler, &cookie))
            }
            return cookie
        }

        public func remove_InputLanguageChanged(_ cookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManager.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_InputLanguageChanged(pThis, cookie))
            }
        }

        public func CreateEditContext() throws -> UWP.CoreTextEditContext? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManager.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateEditContext(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_UI_Text_Core.CoreTextEditContextBridge.from(abi: value)
        }

    }

    public class ICoreTextServicesManagerStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManagerStatics }

        public func GetForCurrentView() throws -> UWP.CoreTextServicesManager? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesManagerStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetForCurrentView(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_UI_Text_Core.CoreTextServicesManagerBridge.from(abi: value)
        }

    }

    public class ICoreTextServicesStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesStatics }

        public func get_HiddenCharacter() throws -> Character {
            var value: WCHAR = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextServicesStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_HiddenCharacter(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class ICoreTextTextRequest: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequest }

        public func get_Range() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Range(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Text() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Text(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Text(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Text(pThis, _value.get()))
            }
        }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequest.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

    public class ICoreTextTextRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequestedEventArgs }

        public func get_Request() throws -> UWP.CoreTextTextRequest? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Request(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_UI_Text_Core.CoreTextTextRequestBridge.from(abi: value)
        }

    }

    public class ICoreTextTextUpdatingEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs }

        public func get_Range() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Range(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Text() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Text(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_NewSelection() throws -> UWP.CoreTextRange {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange = .init()
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NewSelection(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_InputLanguage() throws -> UWP.Language? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_InputLanguage(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Globalization.LanguageBridge.from(abi: value)
        }

        public func get_Result() throws -> UWP.CoreTextTextUpdatingResult {
            var value: __x_ABI_CWindows_CUI_CText_CCore_CCoreTextTextUpdatingResult = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Result(pThis, &value))
            }
            return value
        }

        public func put_Result(_ value: UWP.CoreTextTextUpdatingResult) throws {
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Result(pThis, value))
            }
        }

        public func get_IsCanceled() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceled(pThis, &value))
            }
            return .init(from: value)
        }

        public func GetDeferral() throws -> WindowsFoundation.Deferral? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CUI_CText_CCore_CICoreTextTextUpdatingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.DeferralBridge.from(abi: value)
        }

    }

}
extension __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange {
        public static func from(swift: UWP.CoreTextRange) -> __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange {
            .init(StartCaretPosition: swift.startCaretPosition, EndCaretPosition: swift.endCaretPosition)
        }
    }
    