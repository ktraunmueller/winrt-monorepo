// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appdisplayinfo)
public final class AppDisplayInfo : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel.IAppDisplayInfo
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appdisplayinfo.getlogo)
    public func getLogo(_ size: WindowsFoundation.Size) throws -> UWP.RandomAccessStreamReference! {
        try _default.GetLogo(size)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appdisplayinfo.description)
    public var description : String {
        get { try! _default.get_Description() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appdisplayinfo.displayname)
    public var displayName : String {
        get { try! _default.get_DisplayName() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appinfo)
public final class AppInfo : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel.IAppInfo
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CIAppInfo
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appinfo.appusermodelid)
    public var appUserModelId : String {
        get { try! _default.get_AppUserModelId() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appinfo.displayinfo)
    public var displayInfo : AppDisplayInfo! {
        get { try! _default.get_DisplayInfo() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appinfo.id)
    public var id : String {
        get { try! _default.get_Id() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.appinfo.packagefamilyname)
    public var packageFamilyName : String {
        get { try! _default.get_PackageFamilyName() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.enteredbackgroundeventargs)
public final class EnteredBackgroundEventArgs : WinRTClass, IEnteredBackgroundEventArgs {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel.IEnteredBackgroundEventArgs
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.enteredbackgroundeventargs.getdeferral)
    public func getDeferral() throws -> WindowsFoundation.Deferral! {
        try _default.GetDeferral()
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.leavingbackgroundeventargs)
public final class LeavingBackgroundEventArgs : WinRTClass, ILeavingBackgroundEventArgs {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel.ILeavingBackgroundEventArgs
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.leavingbackgroundeventargs.getdeferral)
    public func getDeferral() throws -> WindowsFoundation.Deferral! {
        try _default.GetDeferral()
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.suspendingdeferral)
public final class SuspendingDeferral : WinRTClass, ISuspendingDeferral {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel.ISuspendingDeferral
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CISuspendingDeferral
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.suspendingdeferral.complete)
    public func complete() throws {
        try _default.Complete()
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.suspendingeventargs)
public final class SuspendingEventArgs : WinRTClass, ISuspendingEventArgs {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel.ISuspendingEventArgs
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.suspendingeventargs.suspendingoperation)
    public var suspendingOperation : SuspendingOperation! {
        get { try! _default.get_SuspendingOperation() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.suspendingoperation)
public final class SuspendingOperation : WinRTClass, ISuspendingOperation {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel.ISuspendingOperation
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CISuspendingOperation
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.suspendingoperation.getdeferral)
    public func getDeferral() throws -> SuspendingDeferral! {
        try _default.GetDeferral()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.suspendingoperation.deadline)
    public var deadline : WindowsFoundation.DateTime {
        get { try! _default.get_Deadline() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.ienteredbackgroundeventargs)
public protocol IEnteredBackgroundEventArgs : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.ienteredbackgroundeventargs.getdeferral)
    func getDeferral() throws -> WindowsFoundation.Deferral!
}

extension IEnteredBackgroundEventArgs {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_ApplicationModel.IEnteredBackgroundEventArgsWrapper.IID:
                let wrapper = __ABI_Windows_ApplicationModel.IEnteredBackgroundEventArgsWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIEnteredBackgroundEventArgs = any IEnteredBackgroundEventArgs

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.ileavingbackgroundeventargs)
public protocol ILeavingBackgroundEventArgs : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.ileavingbackgroundeventargs.getdeferral)
    func getDeferral() throws -> WindowsFoundation.Deferral!
}

extension ILeavingBackgroundEventArgs {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_ApplicationModel.ILeavingBackgroundEventArgsWrapper.IID:
                let wrapper = __ABI_Windows_ApplicationModel.ILeavingBackgroundEventArgsWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyILeavingBackgroundEventArgs = any ILeavingBackgroundEventArgs

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.isuspendingdeferral)
public protocol ISuspendingDeferral : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.isuspendingdeferral.complete)
    func complete() throws
}

extension ISuspendingDeferral {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_ApplicationModel.ISuspendingDeferralWrapper.IID:
                let wrapper = __ABI_Windows_ApplicationModel.ISuspendingDeferralWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyISuspendingDeferral = any ISuspendingDeferral

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.isuspendingeventargs)
public protocol ISuspendingEventArgs : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.isuspendingeventargs.suspendingoperation)
    var suspendingOperation: UWP.SuspendingOperation! { get }
}

extension ISuspendingEventArgs {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_ApplicationModel.ISuspendingEventArgsWrapper.IID:
                let wrapper = __ABI_Windows_ApplicationModel.ISuspendingEventArgsWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyISuspendingEventArgs = any ISuspendingEventArgs

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.isuspendingoperation)
public protocol ISuspendingOperation : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.isuspendingoperation.getdeferral)
    func getDeferral() throws -> UWP.SuspendingDeferral!
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.isuspendingoperation.deadline)
    var deadline: WindowsFoundation.DateTime { get }
}

extension ISuspendingOperation {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_ApplicationModel.ISuspendingOperationWrapper.IID:
                let wrapper = __ABI_Windows_ApplicationModel.ISuspendingOperationWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyISuspendingOperation = any ISuspendingOperation

