// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.annotationtype)
public typealias AnnotationType = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationtexteditchangetype)
public typealias AutomationTextEditChangeType = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperty)
public final class AutomationProperty : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation.IAutomationProperty
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    deinit {
        _default = nil
    }
}

extension WinUI.AnnotationType {
    public static var unknown : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Unknown
    }
    public static var spellingError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_SpellingError
    }
    public static var grammarError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_GrammarError
    }
    public static var comment : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Comment
    }
    public static var formulaError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_FormulaError
    }
    public static var trackChanges : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_TrackChanges
    }
    public static var header : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Header
    }
    public static var footer : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Footer
    }
    public static var highlighted : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Highlighted
    }
    public static var endnote : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Endnote
    }
    public static var footnote : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Footnote
    }
    public static var insertionChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_InsertionChange
    }
    public static var deletionChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_DeletionChange
    }
    public static var moveChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_MoveChange
    }
    public static var formatChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_FormatChange
    }
    public static var unsyncedChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_UnsyncedChange
    }
    public static var editingLockedChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_EditingLockedChange
    }
    public static var externalChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_ExternalChange
    }
    public static var conflictingChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_ConflictingChange
    }
    public static var author : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Author
    }
    public static var advancedProofingIssue : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_AdvancedProofingIssue
    }
    public static var dataValidationError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_DataValidationError
    }
    public static var circularReferenceError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_CircularReferenceError
    }
}
extension WinUI.AnnotationType: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension WinUI.AutomationTextEditChangeType {
    public static var none : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_None
    }
    public static var autoCorrect : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_AutoCorrect
    }
    public static var composition : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_Composition
    }
    public static var compositionFinalized : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_CompositionFinalized
    }
}
extension WinUI.AutomationTextEditChangeType: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

