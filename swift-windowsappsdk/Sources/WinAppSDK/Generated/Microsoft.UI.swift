// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public typealias ClosableNotifierHandler = () throws -> ()
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.displayid)
public struct DisplayId: Hashable, Codable, Sendable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.displayid.value)
    public var value: UInt64 = 0
    public init() {}
    public init(value: UInt64) {
        self.value = value
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.iconid)
public struct IconId: Hashable, Codable, Sendable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.iconid.value)
    public var value: UInt64 = 0
    public init() {}
    public init(value: UInt64) {
        self.value = value
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.windowid)
public struct WindowId: Hashable, Codable, Sendable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.windowid.value)
    public var value: UInt64 = 0
    public init() {}
    public init(value: UInt64) {
        self.value = value
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.iclosablenotifier)
public protocol IClosableNotifier : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.iclosablenotifier.isclosed)
    var isClosed: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.iclosablenotifier.closed)
    var closed: Event<ClosableNotifierHandler> { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.iclosablenotifier.frameworkclosed)
    var frameworkClosed: Event<ClosableNotifierHandler> { get }
}

public extension EventSource where Handler == ClosableNotifierHandler {
    func invoke() throws {
        for handler in getInvocationList() {
            try handler()
        }
    }
}

extension IClosableNotifier {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI.IClosableNotifierWrapper.IID:
                let wrapper = __ABI_Microsoft_UI.IClosableNotifierWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIClosableNotifier = any IClosableNotifier

